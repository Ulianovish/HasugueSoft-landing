---
import type { CollectionEntry } from 'astro:content';
import { AnimatedSection } from '@components/react/AnimatedSection';

interface Labels {
  comparisonTitle: string;
  comparisonSubtitle: string;
  modernLabel: string;
  modernDuration: string;
  traditionalLabel: string;
  testimonialLabel: string;
  recommended?: string;
}

interface Props {
  id: string;
  content: CollectionEntry<'es'>['data']['process'];
  labels: Labels;
}

const { id, content, labels } = Astro.props as Props;

// Function to calculate total duration from traditionalTimeline
function calculateTotalDuration(timeline: Array<{phase: string, duration: string}>): string {
  let minTotal = 0;
  let maxTotal = 0;
  let unit = 'semanas'; // default to Spanish
  
  timeline.forEach(phase => {
    // Extract numbers and unit from duration string (e.g., "4-6 semanas" or "4-6 weeks")
    const match = phase.duration.match(/(\d+)-(\d+)\s+(semanas|weeks)/);
    if (match) {
      const min = parseInt(match[1]);
      const max = parseInt(match[2]);
      unit = match[3]; // Keep the unit from the data
      minTotal += min;
      maxTotal += max;
    }
  });
  
  return `${minTotal}-${maxTotal} ${unit}`;
}

const totalTraditionalDuration = calculateTotalDuration(content.traditionalTimeline);
---
<section id={id} class="py-20 dark-section">
  <div class="container mx-auto px-6">
    <div class="mb-12 text-center">
      <AnimatedSection client:load delay={0}>
        <h2 class="mb-4 text-3xl font-bold lg:text-4xl">{content.heading}</h2>
      </AnimatedSection>
      <AnimatedSection client:load delay={0.1}>
        <p class="mx-auto max-w-3xl text-xl text-muted-foreground">{content.description}</p>
      </AnimatedSection>
    </div>

    <div class="mb-16 grid gap-6 lg:grid-cols-4">
      {content.steps.map((step, index) => (
        <AnimatedSection client:load delay={0.2 + index * 0.1}>
        <article class="relative rounded-3xl border border-border bg-card p-6 text-center shadow-sm">
          <div class="relative mx-auto mb-4">
            <div class={`mx-auto flex h-16 w-16 items-center justify-center rounded-full bg-gradient-to-br ${step.color ?? 'from-primary to-secondary'} text-white shadow-lg`}>
              {index + 1}
            </div>
            {index < content.steps.length - 1 && (
              <div class="absolute top-1/2 left-full hidden h-0.5 w-6 -translate-y-1/2 bg-gradient-to-r from-primary to-secondary lg:block"></div>
            )}
          </div>
          <h3 class="text-lg font-semibold text-card-foreground">{step.title}</h3>
          <p class="text-sm font-medium text-muted-foreground">{step.subtitle}</p>
          <div class="mx-auto mt-3 inline-flex items-center gap-2 rounded-full border border-border px-3 py-1 text-xs text-muted-foreground">
            {step.duration}
          </div>
          <p class="mt-4 text-sm text-muted-foreground">{step.description}</p>
          <ul class="mt-6 space-y-2 text-left text-xs text-muted-foreground">
            {step.activities.map((activity) => (
              <li class="flex items-start gap-2">
                <span class="mt-0.5 text-success">✓</span>
                <span>{activity}</span>
              </li>
            ))}
          </ul>
        </article>
        </AnimatedSection>
      ))}
    </div>

    <div class="mb-12 text-center">
      <AnimatedSection client:load delay={0.7}>
        <h3 class="mb-4 text-3xl font-bold lg:text-4xl">{labels.comparisonTitle}</h3>
      </AnimatedSection>
      <AnimatedSection client:load delay={0.8}>
        <p class="mx-auto max-w-3xl text-xl text-muted-foreground">{labels.comparisonSubtitle}</p>
      </AnimatedSection>
    </div>

    <div class="mx-auto grid max-w-7xl gap-8 lg:grid-cols-2">
      <!-- BMAD-METHOD Card -->
      <AnimatedSection client:load delay={0.9}>
        <article class="relative rounded-3xl border border-primary bg-gradient-to-br from-primary/5 to-secondary/10 shadow-xl lg:scale-[1.02]">
          <div class="absolute -top-4 left-1/2 -translate-x-1/2 rounded-full bg-primary px-4 py-1 text-sm font-semibold text-primary-foreground shadow">
            {labels.recommended ?? 'Recomendado'}
          </div>

          <div class="border-b border-primary/20 px-8 pb-6 pt-8 text-center">
            <h4 class="text-2xl font-bold text-primary">{labels.modernLabel}</h4>
            <p class="mt-2 text-sm text-muted-foreground">Metodología innovadora y eficiente</p>
          </div>

          <div class="space-y-3 px-8 py-6">
            {content.steps.map((step, stepIndex) => (
              <div class="flex items-start gap-3 rounded-xl bg-card/50 p-3 transition hover:bg-card">
                <div class="flex h-8 w-8 flex-shrink-0 items-center justify-center rounded-full bg-primary text-xs font-bold text-primary-foreground">
                  {stepIndex + 1}
                </div>
                <div class="flex-1 min-w-0">
                  <h5 class="font-semibold text-card-foreground">{step.title}</h5>
                  <p class="text-sm text-muted-foreground">{step.duration}</p>
                </div>
              </div>
            ))}
          </div>

          <div class="border-t border-primary/20 px-8 py-6 text-center">
            <div class="inline-flex items-center gap-2 rounded-full bg-success/15 px-4 py-2">
              <span class="text-sm font-medium text-muted-foreground">Total:</span>
              <span class="text-lg font-bold text-success">{labels.modernDuration}</span>
            </div>
          </div>
        </article>
      </AnimatedSection>

      <!-- Traditional Development Card -->
      <AnimatedSection client:load delay={1.0}>
        <article class="rounded-3xl border border-border bg-card shadow-sm">
          <div class="border-b border-border px-8 pb-6 pt-8 text-center">
            <h4 class="text-2xl font-bold text-muted-foreground">{labels.traditionalLabel}</h4>
            <p class="mt-2 text-sm text-muted-foreground">Desarrollo convencional</p>
          </div>

          <div class="space-y-3 px-8 py-6">
            {content.traditionalTimeline.map((phase, index) => (
              <div class="flex items-start gap-3 rounded-xl bg-muted/30 p-3">
                <div class="flex h-8 w-8 flex-shrink-0 items-center justify-center rounded-full bg-muted text-xs font-bold text-muted-foreground">
                  {index + 1}
                </div>
                <div class="flex-1 min-w-0">
                  <h5 class="font-semibold text-card-foreground">{phase.phase}</h5>
                  <p class="text-sm text-muted-foreground">{phase.duration}</p>
                </div>
              </div>
            ))}
          </div>

          <div class="border-t border-border px-8 py-6 text-center">
            <div class="inline-flex items-center gap-2 rounded-full bg-destructive/15 px-4 py-2">
              <span class="text-sm font-medium text-muted-foreground">Total:</span>
              <span class="text-lg font-bold text-destructive">{totalTraditionalDuration}</span>
            </div>
          </div>
        </article>
      </AnimatedSection>
    </div>

    {content.testimonial && (
      <AnimatedSection client:load delay={1.1}>
        <blockquote class="mx-auto mt-12 max-w-4xl rounded-3xl border border-primary/20 bg-primary/5 p-8 text-center shadow-sm">
          <p class="text-lg font-medium text-primary italic">"{content.testimonial.quote}"</p>
          <footer class="mt-4 text-sm text-muted-foreground">
            <strong class="text-foreground">{content.testimonial.author}</strong> · {content.testimonial.role}
          </footer>
        </blockquote>
      </AnimatedSection>
    )}
  </div>
</section>
