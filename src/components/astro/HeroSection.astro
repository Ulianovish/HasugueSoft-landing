---
import type { CollectionEntry } from 'astro:content';
import { AnimatedSection } from '@components/react/AnimatedSection';

interface Props {
  content: CollectionEntry<'es'>['data']['hero'];
}

const { content } = Astro.props as Props;
---
<section class="relative overflow-hidden pt-32 pb-20 lg:pt-40 lg:pb-32 dark-section">
  <div class="absolute inset-0 bg-gradient-to-br from-primary/10 via-transparent to-primary/20"></div>

  <div class="relative container mx-auto max-w-5xl px-6 text-center">
    {content.kicker && (
      <AnimatedSection client:load delay={0}>
        <div class="mb-8 inline-flex items-center rounded-full border border-success/30 bg-success/20 px-4 py-2 text-sm font-medium text-success">
          <span class="mr-2 h-2 w-2 rounded-full bg-success"></span>
          {content.kicker}
        </div>
      </AnimatedSection>
    )}

    <AnimatedSection client:load delay={0.1}>
      <h1 class="mb-6 text-balance text-4xl font-bold text-foreground sm:text-5xl lg:text-6xl">
        {content.title}
        {content.highlight && (
          <span class="text-gradient"> {content.highlight}</span>
        )}
        {content.suffix && ` ${content.suffix}`}
      </h1>
    </AnimatedSection>

    <AnimatedSection client:load delay={0.2}>
      <p class="mx-auto mb-10 max-w-3xl text-pretty text-xl text-muted-foreground lg:text-2xl">
        {content.subtitle}
      </p>
    </AnimatedSection>

    <AnimatedSection client:load delay={0.3}>
      <div class="mb-12 flex flex-col items-center justify-center gap-4 sm:flex-row">
        {content.primaryCta && (
          <a
            href={content.primaryCta.href}
            target="_blank"
            rel="noopener noreferrer"
            class="inline-flex items-center gap-2 rounded-full bg-primary px-8 py-4 text-lg font-semibold text-primary-foreground shadow-lg transition hover:bg-primary/90 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary"
          >
            <svg class="h-5 w-5" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893a11.821 11.821 0 00-3.48-8.413z"/>
            </svg>
            {content.primaryCta.label}
          </a>
        )}
        {content.secondaryCta && (
          <a
            href={content.secondaryCta.href}
            class="inline-flex items-center rounded-full border border-border px-8 py-4 text-lg font-semibold text-foreground transition hover:bg-muted focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-border"
          >
            {content.secondaryCta.label}
          </a>
        )}
      </div>
    </AnimatedSection>

    {content.metrics.length > 0 && (
      <div class="mx-auto grid max-w-3xl gap-6 text-center sm:grid-cols-3">
        {content.metrics.map((metric, index) => (
          <AnimatedSection client:load delay={0.4 + index * 0.1}>
            <div class="rounded-2xl border border-border bg-card p-6 shadow-sm">
              <div class="text-3xl font-bold text-gradient">{metric.value}</div>
              <div class="mt-2 text-sm text-muted-foreground">{metric.label}</div>
              {metric.description && <div class="mt-1 text-xs text-muted-foreground">{metric.description}</div>}
            </div>
          </AnimatedSection>
        ))}
      </div>
    )}
  </div>
</section>
