---
import type { CollectionEntry } from 'astro:content';
import { AnimatedSection } from '@components/react/AnimatedSection';
import { CredentialCard } from '@components/react/CredentialCard';
import { StatementBadge } from '@components/react/StatementBadge';

interface Labels {
  certifications: string;
  expertise: string;
  guarantee: string;
  avgExperience: string;
  finalCtaLabel: string;
}

interface Props {
  id: string;
  content: NonNullable<CollectionEntry<'es'>['data']['credibility']>;
  labels: Labels;
}

const { id, content, labels } = Astro.props as Props;
---
<section id={id} class="bg-muted/30 py-20">
  <div class="container mx-auto px-6">
    <div class="mb-12 text-center">
      <AnimatedSection client:load delay={0}>
        <h2 class="mb-4 text-3xl font-bold lg:text-4xl">{content.heading}</h2>
      </AnimatedSection>
      <AnimatedSection client:load delay={0.1}>
        <p class="mx-auto max-w-3xl text-xl text-muted-foreground">{content.description}</p>
      </AnimatedSection>
    </div>

    <div class="mb-16 grid gap-6 md:grid-cols-2 lg:grid-cols-4">
      {content.credentials.map((credential, index) => (
        <AnimatedSection client:load delay={0.2 + index * 0.1}>
          <CredentialCard client:load credential={credential} />
        </AnimatedSection>
      ))}
    </div>

    <div class="mb-12 grid gap-8 lg:grid-cols-3">
      <AnimatedSection client:load delay={0.6}>
        <article class="rounded-3xl border border-border bg-card p-6 shadow-sm">
        <h3 class="mb-4 flex items-center gap-2 text-base font-semibold text-card-foreground">
          {labels.certifications}
        </h3>
        <div class="space-y-3">
          {content.certifications.map((cert) => (
            <div class="flex items-center justify-between rounded-2xl bg-muted/50 px-4 py-3">
              <div>
                <div class="text-sm font-semibold text-card-foreground">{cert.name}</div>
                <div class="text-xs text-muted-foreground">{cert.type}</div>
              </div>
              <span class="text-success">âœ“</span>
            </div>
          ))}
        </div>
      </article>
      </AnimatedSection>

      <AnimatedSection client:load delay={0.7}>
        <article class="rounded-3xl border border-border bg-card p-6 shadow-sm">
        <h3 class="mb-4 flex items-center gap-2 text-base font-semibold text-card-foreground">
          {labels.expertise}
        </h3>
        <div class="space-y-3">
          {content.expertise.map((item) => (
            <div class="flex items-center justify-between rounded-2xl bg-muted/50 px-4 py-3">
              <div>
                <div class="text-sm font-semibold text-card-foreground">{item.area}</div>
                <div class="text-xs text-muted-foreground">{labels.avgExperience}</div>
              </div>
              <span class="rounded-full border border-border bg-muted px-2 py-1 text-xs text-muted-foreground">
                {item.years}
              </span>
            </div>
          ))}
        </div>
      </article>
      </AnimatedSection>

      <AnimatedSection client:load delay={0.8}>
        <article class="rounded-3xl border border-border bg-card p-6 shadow-sm">
        <h3 class="mb-4 flex items-center gap-2 text-base font-semibold text-card-foreground">
          {labels.guarantee}
        </h3>
        <div class="grid gap-3 sm:grid-cols-2 lg:grid-cols-1">
          {content.achievements.map((item) => (
            <div class="rounded-2xl bg-primary/5 px-4 py-4 text-center">
              <div class="text-2xl font-bold text-primary">{item.metric}</div>
              <div class="text-xs text-muted-foreground">{item.label}</div>
            </div>
          ))}
        </div>
      </article>
      </AnimatedSection>
    </div>

    <AnimatedSection client:load delay={0.9}>
      <div class="mb-10 rounded-3xl border border-primary/20 bg-gradient-to-br from-primary/10 to-secondary/10 px-10 py-12 text-center shadow-sm">
      <h3 class="text-2xl font-bold text-card-foreground">{content.statement.heading}</h3>
      <p class="mx-auto mt-4 max-w-3xl text-base text-muted-foreground">{content.statement.description}</p>
      <div class="mt-6 flex flex-wrap items-center justify-center gap-4">
        {content.statement.badges.map((badge) => (
          <StatementBadge client:load badge={badge} />
        ))}
      </div>
    </div>
    </AnimatedSection>

    {content.finalCta && (
      <AnimatedSection client:load delay={1.0}>
        <div class="text-center">
        <h3 class="text-xl font-semibold text-card-foreground">{content.finalCta.heading}</h3>
        <p class="mx-auto mt-2 max-w-md text-sm text-muted-foreground">{content.finalCta.description}</p>
        <a
          href={content.finalCta.href}
          target="_blank"
          rel="noopener noreferrer"
          class="mt-6 inline-flex items-center gap-2 rounded-full bg-primary px-8 py-4 text-lg font-semibold text-primary-foreground shadow-lg transition hover:bg-primary/90 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary"
        >
          <svg class="h-5 w-5" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893a11.821 11.821 0 00-3.48-8.413z"/>
          </svg>
          {content.finalCta.label || labels.finalCtaLabel}
        </a>
      </div>
      </AnimatedSection>
    )}
  </div>
</section>
